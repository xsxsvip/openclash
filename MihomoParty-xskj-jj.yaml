# 机场订阅，名称不能重复
proxy-providers:
  ProviderAirPort:
    type: http
    interval: 1800
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 🟢 直连
    url: "http://127.0.0.1:38324/download/%E6%B4%8B%E5%B0%8F%E5%93%A5%E8%8A%82%E7%82%B9"
      
# 用于下载订阅时指定UA
global-ua: clash.meta
    
# 全局配置
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
ipv6: false
allow-lan: true
unified-delay: true
tcp-concurrent: true
# interface-name: eth0  （路由器下根据情况指定出站接口）
authentication:
  - name:passwd
  
geodata-mode: true
# GEO 文件加载模式（standard：标准加载器/memconservative：专为内存受限 (小内存) 设备优化的加载器 (默认值)）
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
geox-url:
  geosite: "https://g.3344550.xyz/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://g.3344550.xyz/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.metadb"
  geoip: "https://g.3344550.xyz/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  asn: "https://g.3344550.xyz/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"
  
# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: ui
external-ui-url: "https://g.3344550.xyz/https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"
# 下载面板地址可更换：https://g.3344550.xyz/https://github.com/MetaCubeX/Yacd-meta/archive/gh-pages.zip

# 匹配进程 always/strict/off
find-process-mode: strict
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 30

# 策略组选择和fakeip缓存
profile:
  store-selected: true
  store-fake-ip: true
  
# 流量嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"
    
# 代理模式
tun:
  enable: true
  stack: mixed
  mtu: 9000
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  
# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  # 模式切换 redir-host / fake-ip
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  # 模式切换 whitelist/blacklist 
  # 黑名单模式表示如果匹配成功则不返回 Fake-IP, 白名单模式时只有匹配成功才返回 Fake-IP
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "+.lan"
    - "+.local"
    - geosite:private
    - geosite:cn
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver-policy:
    "rule-set:private_domain,cn_domain":
    - 223.5.5.5
    - 119.29.29.29
    "rule-set:geolocation-!cn":
      - "https://dns.cloudflare.com/dns-query"
      - "https://dns.google/dns-query"
 
   
proxies:
- name: "🟢 直连"
  type: direct
  udp: true

# 锚点
pr: &pr {type: select, proxies: [🚀 节点选择,♻️ 所有自动,🚅 港台日新韩自动,🔯 台日新韩自动,🌐 其他自动,⛑ 全部节点,🟢 直连]}

  
# 策略组
proxy-groups:
  - {name: 🚀 节点选择, type: select, proxies: [♻️ 所有自动,🚅 港台日新韩自动,🔯 台日新韩自动,🌐 其他自动,⛑ 全部节点,🟢 直连]}
  - {name: 👨🏿‍💻 哥特哈布, !!merge <<: *pr}
  - {name: 📹 油管视频, !!merge <<: *pr}
  - {name: 📲 电报通讯, !!merge <<: *pr}
  - {name: 🛰 谷歌服务, !!merge <<: *pr}
  - {name: 🤖 人工智能, !!merge <<: *pr}
  - {name: 🎵 国外抖音, !!merge <<: *pr}
  - {name: 🎥 国外媒体, !!merge <<: *pr}
  - {name: 🏳️‍🌈 国外网络, !!merge <<: *pr}
  - {name: 🚩 国内网络, !!merge <<: *pr}
  - {name: 🎯 全球直连, type: select, proxies: [🟢 直连, 🚀 节点选择]}
  - {name: 🐟 漏网之鱼,!!merge <<: *pr}

  - {name: ♻️ 所有自动, type: url-test, include-all: true, tolerance: 50, interval: 300, filter: "^((?!(直连)).)*$"} 
  - {name: 🚅 港台日新韩自动, type: url-test, include-all: true, tolerance: 50, interval: 300, filter: "(?=.*(香港|HK|🇭🇰|HongKong|台湾|TW|🇹🇼|Tai|日|JP|🇯🇵|Japan|新|SG|🇸🇬|Singapore|韩|KR|🇰🇷|Korea))"}
  - {name: 🔯 台日新韩自动, type: url-test, include-all: true, tolerance: 50, interval: 300, filter: "(?=.*(台湾|TW|🇹🇼|Tai|日|JP|🇯🇵|Japan|新|SG|🇸🇬|Singapore|韩|KR|🇰🇷|Korea))"}
  - {name: 🌐 其他自动, type: url-test, include-all: true, tolerance: 50, interval: 300, filter: "^((?!(直连|香港|HK|🇭🇰|HongKong|台湾|TW|🇹🇼|Tai|日|JP|🇯🇵|Japan|新|SG|🇸🇬|Singapore|韩|KR|🇰🇷|Korea)).)*$"}

  - {name: ⛑ 全部节点, type: select, include-all: true, filter: "^((?!(直连)).)*$"}
rules:
  - RULE-SET,private_domain,🟢 直连
  - RULE-SET,direct1,🚩 国内网络
  - RULE-SET,proxylite,🏳️‍🌈 国外网络
  - RULE-SET,Global,🏳️‍🌈 国外网络
  - RULE-SET,github_domain,👨🏿‍💻 哥特哈布
  - RULE-SET,youtube_domain,📹 油管视频
  - RULE-SET,google_domain,🛰 谷歌服务
  - RULE-SET,ai,🤖 人工智能
  - RULE-SET,tiktok_domain,🎵 国外抖音
  - RULE-SET,netflix_domain,🎥 国外媒体
  - RULE-SET,geolocation-!cn,🚀 节点选择
  - RULE-SET,cn_domain,🎯 全球直连
  - RULE-SET,google_ip,🛰 谷歌服务,no-resolve
  - RULE-SET,netflix_ip,🎥 国外媒体,no-resolve
  - RULE-SET,telegram_ip,📲 电报通讯,no-resolve
  - RULE-SET,cn_ip,🎯 全球直连
  - MATCH,🐟 漏网之鱼
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  xskj: &xskj {type: http, interval: 86400, behavior: domain, format: text}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  private_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs" }
  direct1: { !!merge <<: *class, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/SCXSVIP/Mihomo/refs/heads/main/Direct.list" }
  proxylite: { !!merge <<: *xskj, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/SCXSVIP/Mihomo/refs/heads/main/ProxyLite.list" }
  ai: { !!merge <<: *xskj, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/SCXSVIP/Mihomo/refs/heads/main/AI.list" }
  Global: { !!merge <<: *xskj, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Global/Global.list" }
  youtube_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs" }
  google_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs" }
  github_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs" }
  telegram_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs" }
  netflix_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs" }
  paypal_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs" }
  onedrive_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs" }
  microsoft_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs" }
  apple_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs" }
  speedtest_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs" }
  tiktok_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs" }
  gfw_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs" }
  geolocation-!cn: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs" }
  cn_domain: { !!merge <<: *domain, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs" }
  
  cn_ip: { !!merge <<: *ip, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs" }
  google_ip: { !!merge <<: *ip, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs" }
  telegram_ip: { !!merge <<: *ip, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs" }
  netflix_ip: { !!merge <<: *ip, url: "https://g.3344550.xyz/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs" }